var searchIndex = new Map(JSON.parse('[["axhal_cpu",{"t":"FFFFTTTTFFFTTTNNNNNNNNNNNNNNNNNNNNNNNNNNCOONNHHOOOOOHNNNNNNNONNNNNNNOOOOOHNHHONNNNNNNOHNONNNOONNNNNNOOOOOOOOOOOOOOOHHOOOOONOONNNCNNNNNNNNNNNNNNNNNNNNNOHHHOHHHHHTTJJFTJETTTNNNNNNNNNNNNNNNNXNNNNNNNNNNNNNNNNNHNNNNNNNNNNXNNNNNNNNNNN","n":["ExtendedState","FxsaveArea","GdtStruct","IdtStruct","KCODE32_SELECTOR","KCODE64_SELECTOR","KDATA_SELECTOR","TSS_SELECTOR","TaskContext","TaskStateSegment","TrapFrame","UCODE32_SELECTOR","UCODE64_SELECTOR","UDATA_SELECTOR","arg0","arg1","arg2","arg3","arg4","arg5","borrow","","","","","","","borrow_mut","","","","","","","clone","","clone_into","","clone_to_uninit","","cpu","cr3","cs","default","","disable_irqs","enable_irqs","error_code","ext_state","fcw","fdp","fip","flush_tlb","fmt","","","","","","","fop","from","","","","","","","fs_base","fsw","ftw","fxsave_area","gs_base","halt","init","init_gdt","init_idt","interrupt_stack_table","into","","","","","","","iomap_base","irqs_enabled","is_user","kstack_top","load","","load_tss","mxcsr","mxcsr_mask","new","","","","pointer","","privilege_stack_table","r10","r11","r12","r13","r14","r15","r8","r9","rax","rbp","rbx","rcx","rdi","rdx","read_page_table_root","read_thread_pointer","rflags","rip","rsi","rsp","","set_page_table_root","ss","st","switch_to","to_owned","","trap","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","vector","wait_for_irqs","write_page_table_root","write_thread_pointer","xmm","current_task_ptr","init_percpu_variable","set_current_task_ptr","this_cpu_id","this_cpu_is_bsp","DEVICE","EXECUTE","IRQ","PAGE_FAULT","PageFaultFlags","READ","SYSCALL","TrapFrame","UNCACHED","USER","WRITE","all","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","clone_to_uninit","complement","contains","def_trap_handler","difference","empty","eq","extend","fmt","","","","","from","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","handle_syscall","insert","intersection","intersects","into","into_iter","is_all","is_empty","iter","iter_names","not","register_trap_handler","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_into","type_id","union"],"q":[[0,"axhal_cpu"],[155,"axhal_cpu::cpu"],[160,"axhal_cpu::trap"],[228,"axhal_cpu::x86_64::context"],[229,"x86_64::structures::tss"],[230,"memory_addr::addr"],[231,"core::option"],[232,"core::fmt"],[233,"axhal_cpu::x86_64::gdt"],[234,"axhal_cpu::x86_64::idt"],[235,"core::result"],[236,"x86_64::structures"],[237,"core::any"],[238,"linkme::distributed_slice"],[239,"core::iter::traits::collect"],[240,"x86_64::structures::paging::page_table"],[241,"bitflags::iter"],[242,"axhal_cpu::x86_64"]],"i":"````Bd000```000b00000Af2Bf2AhA`j4635210505050`1550``51222`46352102463521012241`1``046352100`5163622631063055555555555555``55551152150`4635210463521046352105```2`````Ch0```0``0000000000000000000`00000000000000000`0000000000`00000000000","f":"``````````````{{{d{b}}}f}00000{d{{d{c}}}{}}000000{{{d{h}}}{{d{hc}}}{}}000000{{{d{b}}}b}{{{d{j}}}j}{{d{d{hc}}}l{}}0{{dn}l}0`{A`Ab}{bAd}{{}b}{{}j}{{}l}03{A`Af}{AhAj}{AhAd}0{{{An{Al}}}l}{{{d{Af}}{d{hB`}}}Bb}{{{d{Bd}}{d{hB`}}}Bb}{{{d{Bf}}{d{hB`}}}Bb}{{{d{b}}{d{hB`}}}Bb}{{{d{Ah}}{d{hB`}}}Bb}{{{d{A`}}{d{hB`}}}Bb}{{{d{j}}{d{hB`}}}{{Bj{lBh}}}}9{cc{}}000000{A`f};;{AfAh}1>{{{d{hA`}}fAlAl}l}??{jBl}{{}c{}}000000{jAj}{{}Bn}{{{d{b}}}Bn}{A`Al}{{{d{Bd}}}l}{{{d{Bf}}}l}1{AhC`}0{{{d{j}}}Bd}{{}Bf}{{}A`}{{}j}{{{d{Bd}}}Cb}{{{d{Bf}}}Cb}>{bAd}0000000000000{{}Ab}{{}f}2222{A`Ad}{{{d{hA`}}Ab}l}4{AhBl}{{{d{hA`}}{d{A`}}}l}{dc{}}0`{c{{Bj{e}}}{}{}}000000{{}{{Bj{c}}}{}}000000{dCd}000000:{{}l}{Abl}{fl}8{{}}13<{{}Bn}``{{}Cf}0``0````{{}Ch}{{ChCh}Ch}{{{d{hCh}}Ch}l}10{{{d{Ch}}}f}021{d{{d{c}}}{}}{{{d{h}}}{{d{hc}}}{}}{{{d{Ch}}}Ch}{{d{d{hc}}}l{}}{{dn}l}{ChCh}{{{d{Ch}}Ch}Bn}`9:{{{d{Ch}}{d{Ch}}}Bn}{{{d{hCh}}c}l{{Cl{}{{Cj{Ch}}}}}}{{{d{Ch}}{d{hB`}}}{{Bj{lBh}}}}0000{cc{}}{CnCh}{f{{An{Ch}}}}{fCh}00{cCh{{Cl{}{{Cj{Ch}}}}}}{{{d{D`}}}{{An{Ch}}}}{{{d{b}}f}Db}{{{d{hCh}}Ch}l}{{ChCh}Ch}<{{}c{}}{Ch}{{{d{Ch}}}Bn}0{{{d{Ch}}}{{Dd{Ch}}}}{{{d{Ch}}}{{Df{Ch}}}}{ChCh}`7{{{d{hCh}}ChBn}l}787{dc{}}9{c{{Bj{e}}}{}{}}{{}{{Bj{c}}}{}}{dCd};","D":"Of","p":[[5,"TrapFrame",0,228],[1,"reference",null,null,1],[1,"usize"],[0,"mut"],[5,"TaskStateSegment",0,229],[1,"unit"],[1,"u8"],[5,"TaskContext",0,228],[5,"PhysAddr",230],[1,"u64"],[5,"ExtendedState",0,228],[5,"FxsaveArea",0,228],[1,"u16"],[5,"VirtAddr",230],[6,"Option",231,null,1],[5,"Formatter",232],[8,"Result",232],[5,"GdtStruct",0,233],[5,"IdtStruct",0,234],[5,"Error",232],[6,"Result",235,null,1],[1,"array"],[1,"bool"],[1,"u32"],[5,"DescriptorTablePointer",236],[5,"TypeId",237],[5,"DistributedSlice",238],[5,"PageFaultFlags",160],[17,"Item"],[10,"IntoIterator",239],[5,"PageTableFlags",240],[1,"str"],[1,"isize"],[5,"Iter",241],[5,"IterNames",241]],"r":[[0,228],[1,228],[2,233],[3,234],[4,233],[5,233],[6,233],[7,233],[8,228],[9,229],[10,228],[11,233],[12,233],[13,233],[14,228],[15,228],[16,228],[17,228],[18,228],[19,228],[20,228],[21,233],[22,234],[23,228],[24,228],[25,228],[26,229],[27,228],[28,233],[29,234],[30,228],[31,228],[32,228],[33,229],[34,228],[35,229],[36,228],[37,229],[38,228],[39,229],[41,228],[42,228],[43,228],[44,229],[45,242],[46,242],[47,228],[48,228],[49,228],[50,228],[51,228],[52,242],[53,228],[54,233],[55,234],[56,228],[57,228],[58,228],[59,229],[60,228],[61,228],[62,233],[63,234],[64,228],[65,228],[66,228],[67,229],[68,228],[69,228],[70,228],[71,228],[72,228],[73,242],[74,228],[75,233],[76,234],[77,229],[78,228],[79,233],[80,234],[81,228],[82,228],[83,228],[84,229],[85,229],[86,242],[87,228],[88,228],[89,233],[90,234],[91,233],[92,228],[93,228],[94,233],[95,234],[96,228],[97,229],[98,233],[99,234],[100,229],[101,228],[102,228],[103,228],[104,228],[105,228],[106,228],[107,228],[108,228],[109,228],[110,228],[111,228],[112,228],[113,228],[114,228],[115,242],[116,242],[117,228],[118,228],[119,228],[120,228],[121,228],[122,228],[123,228],[124,228],[125,228],[126,228],[127,229],[129,228],[130,233],[131,234],[132,228],[133,228],[134,228],[135,229],[136,228],[137,233],[138,234],[139,228],[140,228],[141,228],[142,229],[143,228],[144,233],[145,234],[146,228],[147,228],[148,228],[149,229],[150,228],[151,242],[152,242],[153,242],[154,228],[167,228]],"b":[[176,"impl-Flags-for-MappingFlags"],[177,"impl-MappingFlags"],[192,"impl-UpperHex-for-MappingFlags"],[193,"impl-Debug-for-MappingFlags"],[194,"impl-Binary-for-MappingFlags"],[195,"impl-Octal-for-MappingFlags"],[196,"impl-LowerHex-for-MappingFlags"],[200,"impl-MappingFlags"],[201,"impl-Flags-for-MappingFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAGkAGQAVABMAKwACADAAAAAyAAIANgAHAEYAAQBdAAEAZgANAHYAAwB8AAEAfwABAIIAFQCbAAAAqAAAALEAAAC1AAQAvAAAAL8AAADBAAQAxwAAAMoAAADTAAAA2QAAAN8AAADhAAIA","P":[[20,"T"],[34,""],[36,"T"],[38,""],[61,"T"],[68,""],[78,"U"],[85,""],[126,"T"],[129,"U,T"],[136,"U"],[143,""],[180,"T"],[182,""],[183,"T"],[184,""],[191,"T"],[192,""],[197,"T"],[198,""],[203,"T"],[204,""],[209,"U"],[210,""],[222,"T"],[223,""],[224,"U,T"],[225,"U"],[226,""]]}],["axhal_plat",{"t":"HHCQQXCCXCCXCKHMHMKHMHMFIKNNNNHMNNNHMNHMNNNHMNSSSTTTKFIFTTITTNNNNNNNNNNNNNHHNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNHMONNNNOHMHNHMNONNNNHNNNNNNNKHMHMFTTSTSTSSSTKITNNNNNNNNNNNNNHHNNNNNNNHMNNNNNNNHMNNNNNNNNNNNNNNNNHHNNNNHMNNNNNHMNNNNNNNHMNNNNNHH","n":["call_main","call_secondary_main","console","console_print","console_println","impl_plat_interface","init","irq","main","mem","power","secondary_main","time","ConsoleIf","read_bytes","","write_bytes","","InitIf","platform_init","","platform_init_secondary","","HandlerTable","IrqHandler","IrqIf","borrow","borrow_mut","default","from","handle","","","into","new","register","","register_handler","set_enable","","try_from","try_into","type_id","unregister","","unregister_handler","DEFAULT_MMIO_FLAGS","DEFAULT_RAM_FLAGS","DEFAULT_RESERVED_FLAGS","DEVICE","EXECUTE","FREE","MemIf","MemRegionFlags","OverlapErr","PhysMemRegion","READ","RESERVED","RawRange","UNCACHED","WRITE","all","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","borrow_mut","","check_sorted_ranges_overlap","clear_bss","clone","","clone_to_uninit","","complement","contains","difference","empty","extend","flags","fmt","","","","","","from","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","insert","intersection","intersects","into","","into_iter","is_all","is_empty","iter","iter_names","mmio_ranges","","name","new_mmio","new_ram","new_reserved","not","paddr","phys_ram_ranges","","ranges_difference","remove","reserved_phys_ram_ranges","","set","size","sub","sub_assign","symmetric_difference","toggle","total_ram_size","try_from","","try_into","","type_id","","union","PowerIf","cpu_boot","","system_off","","Duration","MAX","MICROSECOND","MICROS_PER_SEC","MILLISECOND","MILLIS_PER_SEC","NANOSECOND","NANOS_PER_MICROS","NANOS_PER_MILLIS","NANOS_PER_SEC","SECOND","TimeIf","TimeValue","ZERO","abs_diff","add","add_assign","as_micros","as_millis","as_millis_f32","as_millis_f64","as_nanos","as_secs","as_secs_f32","as_secs_f64","borrow","borrow_mut","busy_wait","busy_wait_until","checked_add","checked_div","checked_mul","checked_sub","clone","clone_to_uninit","cmp","current_ticks","","default","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","epochoffset_nanos","","eq","fmt","from","from_days","from_hours","from_micros","from_millis","from_mins","from_nanos","from_secs","from_secs_f32","from_secs_f64","from_weeks","hash","into","is_zero","monotonic_time","monotonic_time_nanos","mul","mul_assign","mul_f32","mul_f64","nanos_to_ticks","","new","partial_cmp","saturating_add","saturating_mul","saturating_sub","set_oneshot_timer","","sub","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","","ticks_to_nanos","","try_from","try_from_secs_f32","try_from_secs_f64","try_into","type_id","wall_time","wall_time_nanos"],"q":[[0,"axhal_plat"],[13,"axhal_plat::console"],[18,"axhal_plat::init"],[23,"axhal_plat::irq"],[46,"axhal_plat::mem"],[138,"axhal_plat::power"],[143,"axhal_plat::time"],[237,"handler_table"],[238,"core::result"],[239,"core::any"],[240,"core::option"],[241,"core::iter::traits::iterator"],[242,"core::iter::traits::collect"],[243,"core::fmt"],[244,"bitflags::iter"],[245,"memory_addr::addr"],[246,"core::ops::function"],[247,"core::time"],[248,"core::cmp"],[249,"core::hash"],[250,"axhal_plat_macros"]],"i":"```````````````Eb`0``Ed`0```A`000`Ef111`01`0111`01```B`00````00`000000000000Bj10``1010111110111110101111111111011111`Eh111121`0`2`0212222`2121212``Ej`0`Cn0`0`0```0``00000000000000``0000000`El1111111`01111111111111111``1111`011111`01111111`011111``","f":"{{bb}d}{bd}````````````{{{l{f{j{h}}}}}b}0{{{l{{j{h}}}}}n}0`{{}n}000```{l{{l{c}}}{}}{{{l{f}}}{{l{fc}}}{}}{{}A`}{cc{}}{bn}0{{{l{A`}}b}Ab}{{}c{}}4{{bAd}Ab}0{{{l{A`}}b{Ah{}{{Af{n}}}}}Ab}{{bAb}n}0{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{lAl}{b{{An{Ad}}}}0{{{l{A`}}b}{{An{{Ah{}{{Af{n}}}}}}}}{{}B`}00````````````0{{B`B`}B`}{{{l{fB`}}B`}n}10{{{l{B`}}}b}021{l{{l{c}}}{}}0{{{l{f}}}{{l{fc}}}{}}0{c{{Aj{nBb}}}{{Bh{}{{Bd{Bf}}}}}}{{}n}{{{l{B`}}}B`}{{{l{Bj}}}Bj}{{lh}n}0{B`B`}{{{l{B`}}B`}Ab};<{{{l{fB`}}c}n{{Bl{}{{Bd{B`}}}}}}{BjB`}{{{l{B`}}{l{fBn}}}C`}0000{{{l{Bj}}{l{fBn}}}C`}{cc{}}0{b{{An{B`}}}}{bB`}00{cB`{{Bl{}{{Bd{B`}}}}}}{{{l{Cb}}}{{An{B`}}}}{{{l{fB`}}B`}n}{{B`B`}B`};{{}c{}}0{B`c{}}{{{l{B`}}}Ab}0{{{l{B`}}}{{Cd{B`}}}}{{{l{B`}}}{{Cf{B`}}}}{{}{{l{{j{Bf}}}}}}0{Bjl}{{bb{l{Cb}}}Bj}00{B`B`}{BjCh}44{{{l{{j{Bf}}}}{l{{j{Bf}}}}c}{{Aj{nBb}}}{{Cj{Bf}}}}<55{{{l{fB`}}B`Ab}n}{Bjb}=>=>{{}b}{c{{Aj{e}}}{}{}}0{{}{{Aj{c}}}{}}0{lAl}0{{B`B`}B`}`{{bb}n}0{{}d}0```{{}Cl}`0`000````{{CnCn}Cn}0{{{l{fCn}}Cn}n}{{{l{Cn}}}D`}0{{{l{Cn}}}Db}{{{l{Cn}}}Dd}2{{{l{Cn}}}Cl}21{l{{l{c}}}{}}{{{l{f}}}{{l{fc}}}{}}{Cnn}{Dfn}{{CnCn}{{An{Cn}}}}{{CnDh}{{An{Cn}}}}01{{{l{Cn}}}Cn}{{lh}n}{{{l{Cn}}{l{Cn}}}Dj}??{{}Cn}{{CnDh}Cn}{{{l{fCn}}Dh}n}{{CnCn}Db}{{CnCn}Dd}{{CnDb}Cn}{{CnDd}Cn}{{}Cl}0{{{l{Cn}}{l{Cn}}}Ab}{{{l{Cn}}{l{fBn}}}{{Aj{nDl}}}}{cc{}}{ClCn}000000{DbCn}{DdCn}2{{{l{Cn}}{l{fc}}}nDn}{{}c{}}{{{l{Cn}}}Ab}{{}Df}:{{CnDh}Cn}{{{l{fCn}}Dh}n}>={ClCl}0{{ClDh}Cn}{{{l{Cn}}{l{Cn}}}{{An{Dj}}}}{{CnCn}Cn}50{Cln}01{{{l{fCn}}Cn}n}{{{l{Cn}}}Dh}00{cCn{{Bh{}{{Bd{{l{Cn}}}}}}}}{cCn{{Bh{}{{Bd{Cn}}}}}}88{c{{Aj{e}}}{}{}}{Db{{Aj{CnE`}}}}{Dd{{Aj{CnE`}}}}{{}{{Aj{c}}}{}}{lAl}{{}Df}{{}Cl}","D":"AGd","p":[[1,"usize"],[1,"never"],[0,"mut"],[1,"u8"],[1,"slice"],[1,"reference",null,null,1],[1,"unit"],[5,"HandlerTable",23,237],[1,"bool"],[8,"IrqHandler",23],[17,"Output"],[1,"fn"],[6,"Result",238,null,1],[5,"TypeId",239],[6,"Option",240,null,1],[5,"MemRegionFlags",46],[8,"OverlapErr",46],[17,"Item"],[8,"RawRange",46],[10,"Iterator",241],[5,"PhysMemRegion",46],[10,"IntoIterator",242],[5,"Formatter",243],[8,"Result",243],[1,"str"],[5,"Iter",244],[5,"IterNames",244],[5,"PhysAddr",245],[10,"FnMut",246],[1,"u64"],[5,"Duration",143,247],[1,"u128"],[1,"f32"],[1,"f64"],[8,"TimeValue",143],[1,"u32"],[6,"Ordering",248],[5,"Error",243],[10,"Hasher",249],[5,"TryFromFloatSecsError",247],[10,"ConsoleIf",13],[10,"InitIf",18],[10,"IrqIf",23],[10,"MemIf",46],[10,"PowerIf",138],[10,"TimeIf",143]],"r":[[8,250],[11,250],[23,237],[26,237],[27,237],[28,237],[29,237],[32,237],[33,237],[34,237],[37,237],[40,237],[41,237],[42,237],[45,237],[143,247],[144,247],[145,247],[147,247],[149,247],[153,247],[156,247],[157,247],[158,247],[159,247],[160,247],[161,247],[162,247],[163,247],[164,247],[165,247],[166,247],[167,247],[168,247],[169,247],[172,247],[173,247],[174,247],[175,247],[176,247],[177,247],[178,247],[181,247],[182,247],[183,247],[184,247],[185,247],[186,247],[187,247],[190,247],[191,247],[192,247],[193,247],[194,247],[195,247],[196,247],[197,247],[198,247],[199,247],[200,247],[201,247],[202,247],[203,247],[204,247],[205,247],[208,247],[209,247],[210,247],[211,247],[214,247],[215,247],[216,247],[217,247],[218,247],[221,247],[222,247],[223,247],[224,247],[225,247],[226,247],[227,247],[230,247],[231,247],[232,247],[233,247],[234,247]],"b":[[66,"impl-MemRegionFlags"],[67,"impl-Flags-for-MemRegionFlags"],[86,"impl-Octal-for-MemRegionFlags"],[87,"impl-UpperHex-for-MemRegionFlags"],[88,"impl-Debug-for-MemRegionFlags"],[89,"impl-LowerHex-for-MemRegionFlags"],[90,"impl-Binary-for-MemRegionFlags"],[95,"impl-MemRegionFlags"],[96,"impl-Flags-for-MemRegionFlags"],[226,"impl-Sum%3C%26Duration%3E-for-Duration"],[227,"impl-Sum-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADMAFQAbAAIAKQACAEQAAABHAAMATQADAFcABQBhAAAAagAAAIQABQCfAAEAqQABALEAAgC2AAIAvwABAMwAAADRAAEA2AAAAN4AAQDjAAEA5wAAAOoAAQA=","P":[[26,"T"],[28,""],[29,"T"],[30,""],[33,"U"],[34,""],[40,"U,T"],[41,"U"],[42,""],[70,"T"],[74,""],[75,""],[84,"T"],[85,""],[92,"T"],[94,""],[98,"T"],[99,""],[103,"U"],[105,"IntoIterator::IntoIter"],[106,""],[120,"F"],[121,""],[131,"U,T"],[133,"U"],[135,""],[168,"T"],[170,""],[192,"T"],[193,""],[203,"__H"],[204,"U"],[205,""],[226,"I"],[228,""],[230,"U,T"],[231,""],[233,"U"],[234,""]]}],["axhal_plat_impl",{"t":"CSSCCSSSSSSSSSSSSSS","n":["config","ARCH","PLATFORM","devices","plat","MMIO_RANGES","PCI_BUS_END","PCI_ECAM_BASE","PCI_RANGES","VIRTIO_MMIO_RANGES","FAMILY","KERNEL_ASPACE_BASE","KERNEL_ASPACE_SIZE","KERNEL_BASE_PADDR","KERNEL_BASE_VADDR","PHYS_BUS_OFFSET","PHYS_MEMORY_BASE","PHYS_MEMORY_SIZE","PHYS_VIRT_OFFSET"],"q":[[0,"axhal_plat_impl"],[1,"axhal_plat_impl::config"],[5,"axhal_plat_impl::config::devices"],[10,"axhal_plat_impl::config::plat"]],"i":"```````````````````","f":"`{{}b}0``0{{}d}011100000000","D":"Bh","p":[[1,"reference",null,null,1],[1,"usize"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA=","P":[]}],["axhal_plat_macros",{"t":"XX","n":["main","secondary_main"],"q":[[0,"axhal_plat_macros"]],"i":"``","f":"``","D":"f","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA=","P":[]}],["axplat_aarch64_common",{"t":"QCCCQCCCQHHHHHHHHHHHHHHHHHHHHHHHHHH","n":["console_if_impl","cpu","generic_timer","gic","irq_if_impl","pl011","pl031","psci","time_if_impl","init_cpu_primary","init_cpu_secondary","current_ticks","enable_irqs","init_early","nanos_to_ticks","set_oneshot_timer","ticks_to_nanos","handle_irq","init_gicc","init_gicd","register_handler","set_enable","unregister_handler","getchar","init_early","irq_handler","putchar","read_bytes","write_bytes","epochoffset_nanos","init_early","cpu_off","cpu_on","init","system_off"],"q":[[0,"axplat_aarch64_common"],[9,"axplat_aarch64_common::cpu"],[11,"axplat_aarch64_common::generic_timer"],[17,"axplat_aarch64_common::gic"],[23,"axplat_aarch64_common::pl011"],[29,"axplat_aarch64_common::pl031"],[31,"axplat_aarch64_common::psci"],[35,"memory_addr::addr"],[36,"axhal_plat::irq"],[37,"core::option"]],"i":"```````````````````````````````````","f":"`````````{bd}0{{}f}1{{}d}{ff}{fd}142{{hh}d}{{bj}l}{{bl}d}{b{{n{j}}}}{{}{{n{A`}}}}{hd}8{A`d}{{{Af{Ab{Ad{A`}}}}}b}{{{Af{{Ad{A`}}}}}d}<3;{{bbb}d}{{{Af{Ah}}}d}{{}Aj}","D":"Dh","p":[[1,"usize"],[1,"unit"],[1,"u64"],[5,"VirtAddr",35],[8,"IrqHandler",36],[1,"bool"],[6,"Option",37,null,1],[1,"u8"],[0,"mut"],[1,"slice"],[1,"reference",null,null,1],[1,"str"],[1,"never"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA=","P":[]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[7064,7851,650,185,1337]}